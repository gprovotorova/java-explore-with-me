drop table if exists comments;
drop table if exists compilation_events cascade;
drop table if exists requests cascade;
drop table if exists events cascade;
drop table if exists compilations cascade;
drop table if exists locations cascade;
drop table if exists users cascade;
drop table if exists categories cascade;

create table categories (
    id bigint not null generated by default as identity,
    name varchar not null unique,
    constraint categories_pk primary key (id)
);

create table users (
    id bigint not null generated by default as identity,
    name varchar not null,
    email varchar not null unique,
    constraint users_pk primary key (id)
);

create table locations (
    id bigint not null generated by default as identity,
    lat float,
    lon float,
    constraint locations_pk primary key (id)
);

create table compilations (
    id bigint not null generated by default as identity,
    pinned boolean,
    title varchar not null,
    constraint compilations_pk primary key (id)
);

create table events (
    id bigint not null generated by default as identity,
    title varchar (120),
    annotation varchar (2000),
    description varchar (7000),
    event_date timestamp without time zone,
    created_on timestamp without time zone,
    published_on timestamp without time zone,
    confirmed_requests bigint,
    request_moderation boolean,
    paid boolean,
    views bigint,
    participant_limit bigint,
    state varchar(50),
    category_id bigint,
    initiator_id bigint,
    location_id bigint,
    constraint events_pk primary key (id),
    constraint events_fk foreign key (category_id) references categories(id),
    constraint events_fk_1 foreign key (initiator_id) references users(id),
    constraint events_fk_2 foreign key (location_id) references locations(id)
);

create table requests (
    id bigint not null generated by default as identity,
    created timestamp without time zone,
    status varchar(50),
    event_id integer,
    requester_id integer,
    constraint requests_pk primary key (id),
    constraint requests_fk foreign key (event_id) references events(id),
    constraint requests_fk_1 foreign key (requester_id) references users(id)
);

create table compilation_events (
    id bigint not null generated by default as identity,
    compilation_id integer not null,
    event_id integer not null,
    constraint compilation_events_pk primary key (id),
    constraint compilation_events_fk foreign key (compilation_id) references compilations(id),
    constraint compilation_events_fk_1 foreign key (event_id) references events(id)
);

create table comments (
    id bigint not null generated by default as identity,
    text varchar not null,
    author_id bigint,
    event_id bigint,
    created timestamp without time zone,
    updated timestamp without time zone,
    constraint comments_pk primary key (id),
    constraint comments_fk foreign key (author_id) references users(id),
    constraint comments_fk_1 foreign key (event_id) references events(id)
);
